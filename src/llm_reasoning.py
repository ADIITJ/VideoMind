import ollama

def refine_caption_llm(caption: str) -> str:
    """
    Use LLM to improve a caption, making it clearer and slightly more descriptive,
    but strictly without adding information not present in the original.
    """
    system_prompt = (
        "You are an expert at editing image captions. "
        "You will be given a caption generated by an image captioning model. "
        "Your job is to make it clearer and slightly more descriptive, "
        "but do NOT add any information that is not present in the original caption. "
        "Do not speculate or hallucinate. "
        "Return only the improved caption, concise and factual."
    )
    user_prompt = f"Original caption: {caption}\n\nImproved caption:"
    messages = [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": user_prompt}
    ]
    resp = ollama.chat(model="mistral:latest", messages=messages)
    return resp.get('message', {}).get('content', '').strip()

def summarize_time_llm(captions: list) -> str:
    """
    Use LLM to summarize a list of captions from a time window.
    """
    system_prompt = (
        "You are an expert at summarizing video events. "
        "You will be given a list of image captions from a contiguous segment of a video. "
        "Summarize the main events described, strictly based on the captions. "
        "Do not add any new information or speculate. "
        "Keep the summary concise, factual, and under 60 words."
    )
    joined = "\n".join(captions)
    user_prompt = f"Captions:\n{joined}\n\nSummary:"
    messages = [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": user_prompt}
    ]
    resp = ollama.chat(model="mistral:latest", messages=messages)
    return resp.get('message', {}).get('content', '').strip()

def summarize_object_llm(object_name: str, captions: list) -> str:
    """
    Use LLM to summarize a list of captions related to a specific object.
    """
    system_prompt = (
        "You are an expert at summarizing video content by object. "
        "You will be given a list of image captions, each mentioning or involving a specific object. "
        "Summarize what happened involving this object, strictly based on the captions. "
        "Do not add any new information or speculate. "
        "Keep the summary concise, factual, and under 60 words."
    )
    joined = "\n".join(captions)
    user_prompt = f"Object: {object_name}\nCaptions:\n{joined}\n\nSummary:"
    messages = [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": user_prompt}
    ]
    resp = ollama.chat(model="mistral:latest", messages=messages)
    return resp.get('message', {}).get('content', '').strip()
    return resp.get('message', {}).get('content', '').strip()
